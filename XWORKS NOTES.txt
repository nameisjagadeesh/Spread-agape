X-WORKZ CLASS NOTES 24/08/22
JAVA IS DEVELOPED BY JAMES GOSLING
java is high level object oriented programing language.
object oriented means a way to develop softeware
language is a means of communication
programming language is any language that is executed on computer system 
program is the decision , set of activity combined to perform a specific task
syntax in java is grammer to undertand n follow ,it is provides by pro lang
main purpose of devlopper is to maintain and the manage the user data
JDK:JAVA DEVELOPMENT KIT>WRITING PROGRAM>JAVA TO RUN PROGRAM;JAVAC TO CONVERT ENGLISH TO JAVA
JRE:JAVA RUNTIME ENV>RUN PROGRAM , JRE HAS JVM
JVM:JAVA VIRTUAL MACHINE>RUNS N EXCECUTE THE PROGRAM
JRE CONSIST OF JVM
JDK is basically a software development environment which is used to develop applications and applets.  jdk has tools and bins
JRE is a set of software tools which provides the run time environment , it contains set of liberaries
JRE is physical implementation of JVM as It provides a platform to execute java programs. jvm is responible for converting byte code into system specific instruction.

JAVA IS WIDELY USED PROGRAMMING LANGUAGE FOR CODING WEB APPLICATION
JAVAC COMPILES PROGRAM LANGUAGE INTO CLASS FILES THAT RUN ON THE JVM ,JAVAC USES JRE
features of java =simple,robust,platform independent,portability,java is WORA

platform is combinatiom of software n hardesware ex;ios n hardeware
java is platform independent
WORA -WRITE ONCE RUN ANYWHERE once compiled i
byte code is a special format which is understood by only JVM,CLASS=BYTE CODE
javac generates bytecode
developers writes source code
PLATFORM INDEPENDENT, IS JAVA COMPILED CODE (BYTE CODE) CAN RUN ON ALL OS
Datatype is a set of values and set of operations defined on those values .It defines what type of data and the size of data that is stored in a variable. ex=int size=56;
Variables are containers which stores the values. or variables are ref which points to the memory
The double colon (::) operator, also known as method reference operator in Java, is used to call a method by referring to it with the help ..

JAVA IS OBJECT ORIENTED PROGRAMMING LANGUAGE,JAVA REPRESENTS REAL WORLD
OBJECT/class/things HAS STATES(DATA) AND BEHAVIOUR(ACTION)
jvm look for main method to execute
PUBLIC STATIC VOID MAIN(STRING[] ARG) =main method  =public is access specifier which is direct access to the jvm,static means direct access to the jvm without creating the object ,void is a return type and main is the name of the method which is searched by the jvm it is the method where the main execution occurs .String [] args is the parameter passed to the main method

main method is first method to start program
MEMORY RAM, HEAP MEMORY, META SPACE
HEAP TO EXECUTE JAVA PRO
CLASS LOADER IS A CLASS/object WHICH LOADS INFO OF CLASSES INTO META SPACE ,JVM USES CLASS LOADER
META SPACE IS TO LOAD CLASS INFO
STACK TO EXECUTE METHODS ,it will look for perticular mathod
CONSTANT POOL TO SToRE PREMITIVE
INSTANCE MEMORY TO STORE NON PREMITIVE
system.out.println(statement)> system:is class,. is a dot operator,out: static variable ,statement is args , println is static method , S should b in caps

output in java is information
use of writing program is to represent object ,
data=is variable.> ways/types=static,instance,local,parameter ,data is use to store data
declaring a variable=datatype refname(value)ex: Pizza pizza;
initialise a variable=by adding ;(semicolon which means end of statemnet) 
datatype in java are 2 types =premitive n non premitive, premitive is to denote values, non primitive to compex value
types of primitive parameter(java dataypes)=byte ,short ,int , long ,float ,double, boolean, char


non primitive =any class we write is non premitive ,types=countless
any class will  have state and behaviour
local variable=declared within method body ,local variables cant be used without initialisation
pop=removing  a method
concatenation to add  which join results,adding strings together(+)
if two ref pointing to same memory we have to use "doble equals operater(==)" ,it will never check value

variable can never hold value it will only ref to adress
Scopes{}=using the data in a boundary ,ex;voter id scope is ward ,DL-nation with bigger scope passport;worldwide
wrapper classes=Object representation of primitive data type is called wrapper class.

reference is pointing to adress
variable is something which changes
ref variable which changes the adress
array is a collection of similara types of datatype or collection of variables of the same data type ,array is a container to store multiple data
array is non primitive ,any class is non premitive which has state n behaviour
primitive has no state and behaviour
array is group of reference of any dataypes(premitive or non premitive) array is also a data type "(datatype[] variablename}" ex=char []sizes;
[]is to hold multiple reference 
two ways to initialise array :{} or new keyword
index=length-1

string is a sequence of charecters=String =""
default value is given by jvm static n instance variable
local variable is one which is within main method
static, instance variable are class varibales
local and parameter are methods

null =which is pointing to no memory adress; it can be only non primitive
void=is return type which ref to no adress
return is use to stop the execution in any method
break is use to stop in loop
method is the set of statements;
parameter is a local variable which is declared within (),it can be initiated inside and outside,cant be declared before initialisation
local variable is declared within body only(inside),it can be initialised before declaration,
argument is a reference passed to method()

polymarphism is using same word in java to mean different things in differentcontext or (same thing but in different form)
2 types of polymarphism =compile time (overloading) and run time (overridding)
types of polymarphism=overloading-which is of same method but different in parameter ,overloading is a compile time polymarphism
variable can be initialised in 4 ways==literals,constructor,methods,class(or reference)

import of package
1. import statement : use classes from same package
2. in-line import : use when two classes with same name, from different package 
3. static import : to use static members without using class name 
4. wild card imports : use multiple classes from same package

copy : static has one copy n nonstatic has many copies
constructor is a special mathod ,it is same as class name ex:Bike() or Bike();  
constructor has no return type
constructor used with new key word
compiler will provides no-argument constructor
instantiation is initiating the non primitive,it is making copies in instance memory
initialisation for primitive instance variables,instance creates many copies

New is a keyword which allocates the memory in instance and it used to create an object
instance creation/object creation ex =Song type=new Song;
Garbage Collection in java when ref is not pointing to any memory java (JVM) will automatically clear or recliams that memory
FQN=Fully Qualified Name is path+classname 

constructors are mainly used to initialise instance variable during instance creation ,Constructor gets called at the time of object creation.
types of constructor:1.default constructor(When user don’t define any constructor, compiler provides a default constructor.)
The access modifier of default constructor is same as that of the class.
2.custom constructor:User defined constructor is also known as custom constructor.The access modifier of custom constructor can be either public or protected or default or Private.
4 ways to initialise constructor =literals(default),reference(to update),constructor and methods
instance means copy			
constructor can be executed in stack ,constructor is not a member
if the constructors are marked as static, they can not be called from the child class;
this. is a keyword used when instance variable names and local variable names are same
this. keyword used in variable,methods,constructor
c programing language was developed by Dennis Richie
constructor chaining=when one constructor calls another constructor 


types of chaining=super(default/implicit::when calling from parent class) and this(calling from same class)
class level variable=static and non static
class variables=static 
any example we say is class,datatype,nonprimitive,object
F6 to execute one by one
F8 to close n come out
shortcut to declare and initialise constructor alr+shift+s+o/source in eclipse
Enum is a special class or datatype that represent a group of constants (which are unchangable variables like final variable)

Association in java is a connection or relation between two separate classes that are set up through their objects
relations are two types :: 1.inheritance(IS-A which is used for related things ex:Jagadeesh is good man) 
2.Association(HAS-A which is used for unrelated things ex: jagadeesh has a iphone)
null point exeptioner=when reference is not pointing to any memory and we try to access that variable
static can be accessed using the class name and reference but instance is accessed only by reference
Association types = composition:strong (where sub class cant exist without parent class  ex:fish and water) Aggregation :weak(where sub class can exist without parent class ex)

Access specifier control who can access and modify, it is  used at class , constructor, properties,method
4 access specifier: private (only inner class), protected(only inner class), default(only within same package ),  public(class , constructor, properties,method ,where it allows other classes from different package to access)
Magical package: these are default packages which dont need import , jre automatically imports
Access specifier provides the visibility 


ENCAPSULATION:: restricting direct access of properties and providing access using method

Class is a blueprint/or templet it contains variables and datatype
class loader is an object responible for loading the class ,it is a abstraction class
dot operater(.)is used to access thr instance variable and methods of class objects
for loop  =4 condition: initialization , condition check, checks if it is true and enter the loops and finally increament or decreament.
  

Inheritance means one class aquiring members(properties and methods) of another class
Inheritance ( extends keyword)
Parent ( has members).  Child ( is a class) Inheritance doesn’t need references
inheritance types =single,multilevel and heirarchial
in java multiple and hybrid inheritance is not possible ,for this we need interface
inheritance use is to overridding and re-usability(to avoid duplicate)  and to achieve polymarphism
Invisible parent is object and object is a superclass and object is in magical package  
any class we write is a part of object which is polymorphic in nameture(diff form)
casting=converting the parent reference to sub ckass(child class) only when parent ref is pointing to childclass ex:childclass name ref=(childclass name) parentclass ref OR "Creating an object of sub class and referring it by super class reference variable is called"
upcasting.
constructors are not inherited bcz they used to just initialisation of instance variable
java doesn’t support multiple inheritance by class but supports from interface
static members are inherited but cant be overriden

Class and parents terminologies 
childclass/subclass/derivedclass
Parent/superclass/baseclass

variable is a ref to address and it stores the value.
jvm decides which method to executes at run time(from parent or child) this is called as run time polymarphism
run time polymarphism(Or Dynamic method dispatch) achieved by overridding
overridding is compile time bcz compiler will check the errors during the method overridding(@overridding)
@(annotation) was introduced during java 1.5version ,it will check compile time errors.


Method :
What is a method ?
Ans :
→ A method is a set of instructions/statements or block of code which performs a specific task.
→ Method can return either primitive data or non primitive data.
→ Method can't return multiple primitive data types (eg : method can't return both int
and String at the same time).
→ But, It can return collection of homogeneous data type. ( eg : int[] array or String[]
array etc..)

When we use protected keyword we can initiate and create instance within same package but not possible to creat instance in different package, in different package it will be accessed by only inheritance but not accessed by reference 
2 ways to access constructor: by new keyword and by super chaining
Pointer is a kind of variable which points to memory of an address they are not used in java bcz they are unsecured 

We can’t override the static method bcz method overrridding is dynamic during run time and static methods are binded at compile time  but static methods can be inherited
final keyword used with class ,variable and method
By using final keyword at class level we can stop inheritance and cant be extended 
When we use make method as final we can inherit the method but can’t be overridden 
Out of 11 methods of object only 9 methods are accessed using reference

Hashcode used internally for hashing algorithms 
Equals method compare data of 2 objects(for non primitive) and == for primitive and non primitive data type 

String is immutable bcz it cant be inherited and modified (final)
2 ways to create string = littereal and with new keyword+

String has 65+11= 76 methods by default 
Internally string is represented as char[]
Constant pool never duplicates and instance memory can duplicate ( as we used with new keyword)

Interface bridge between 2 system(class) or rules allows two classes interact 
Interface is a keyword,non primitive datatype,cant declare constructor, cant create instances,declared as public (abstract,static,default)method, class only provides for implementation,it doesn’t support concrete methods(non static and non abstract),variables as public static final , it supports multiple inheritance 
Interface is 100% abstract and class is not 100% abstract(bcz class has both abstract and complete methods), class has methods with implementation but abstraction has no
Class has both abstract and concrete methods .
Interface is always public 
Interface used to achieve abstraction 
Class can implement n no of Interface but extend only one class
Instance creation is not possible for abstract class ,but  abstract class has default constructor
Abstraction class is completed using subclass 
Interface is also a incomplete and it is completed using implementation 
abstract class has default constructor but cant be used with new keyword ,only purpose is to chaining 
Parametrised constructor is mandatory in abstract class only when parent class has no default constructor 
One Interface extends another Interface or n no of interface
Marker Interface :it with no abstract methods
Java is pure objective oriented but it depends on developer how he uses it 
Ex: private int no; Or private Integere no;       We can use both things
instance creation is not possible in interface but we can create implementation

EXCEPTIONAL EVENTS (Exception’s)
Events which stop the normal execution are called exceptional events 
Types : fix with change and fix without change
Throwable is parent most type to represent the exceptional issues
Throwable types : error and exception  both represents the exceptional events of class 
Error: system issue, memory issues , errors cant be recovered 
Exceptions : isssues in our program, data issues
Run time exceptions : logic issue
Throwable is not used bcz we cant distinguished between errors and exception
Throw keyword is used to declare the exceptional event ( ex=throw new RuntimeException();)

Keywords in java are something that has got a special meaning.
A variable is something that holds a value in the memory.
Static variables are also known as class variables.static means one single copy in the memory.
Static variables can be directly accessed from both static area and instance area.The scope of static variable is same as the scope of the class.
If we want common data to be shared across multiple objects, then we declare these data members as static variables.
Explain System.out.println(); =It is used to print a custom value on the console.Here, System is a predefined class in java.
‘out is a static object reference variable in System class,Println() is one of the non static method of PrintStream class which is actually responsible to print any custom value on the console.

array=Can store only homogenous data.Arrays are fixed, that is, when we declare an array, we must define the size.We can store duplicate values.We can also store null values.We can store both the address of an object and the actual object itself.

The process of automatic conversion of non primitive data type in to its corresponding primitive type by the compiler is called unboxing.
The process of automatic conversion of primitive data type in to its corresponding non primitive data type by the compiler is called autoboxing.

singleton class=is a class whose only one instance can be created at any given time in one jvm .a class can be made singleton by making its constructor private.

EXCEPTIONAL EVENTS (Exception’s)
Events which stop the normal execution are called exceptional events 
Types : fix with change and fix without change
Throwable is parent most type to represent the exceptional issues
Throwable types : error and exception  both represents the exceptional events of class 
Error: system issue, memory issues , errors cant be recovered 
Exceptions : isssues in our program, data issues
Run time exceptions : logic issue
Throwable is not used bcz we cant distinguished 
Throw keyword is used to create the exceptional event (throw new RuntimeException();)
Stack trace 
Throw will declare the exceptional event
Exceptional handlers: throws and tryblock
Error is an event and compilation error is a syntax problem
Compile time exception /checked exception: compiler is forcing u to handle issue
Run time exception/unchecked : compiler will not force u to handle issue
Jvm will create the exceptional 
Throws will delegate the exceptional caller of the method to handle the event
Compiler will uncheck event if it is sub class of RuntimeException 
Delegate means force creator to handle the method 
When we delegate to handle exception , use only sub class handlers , dont use parent type exception, throwable,error
Jvm tries to trace for the handler
Try block Handling the issue will make exceptions continue  ,try will help to come out of the exception and catch will handle it and continue the exception
types of tryblocks syntaxs;
1.try with resource                        try(){}
2.try(autoclosable)   
3.try with catch block                    try{} catch(type){} catch(type1){}
4.try with multiple catch block
5.try with finally block                  try{}  finally{}
6.try with catch and finally block        try{} catch(type){} finally{}
7.try with multi catch blocks             try{} catch(type|type1){}
8.try with multi catch blocks and finally block  
Jvm calls the catch block
Jvm will create exception at run time 
Finally (warranty )block will assured to always run it is assured by jvm , finally block helps to print important logics
System.exit(8) is the only method by which jvm gets killed  and finally will not executed,this method should not be used in industry 
Finally used to close the resource/ write a import logic.there is one scenario where the finally block does not execute. When you run System.exit(0) in the try or catch block, then finally block does not execute.

The stack trace, also called a backtrace, consists of a collection of stack records, which store an application's movement during its execution. The stack trace includes information about program subroutines and can be used to debug or troubleshoot and is often used to create log files

For loop is to access 
In interface only if we write default then we can write body
Class can be RuntimeException is by inheritance
Comple time exception created by extending exception 
Run time exception created by extending run time exception 

DTO - data transfer object it is a design pattern
It is a class it should only has datas not the methods
5 Rules
- [ ] Class should be non final
- [ ] Implements Serialisable( marker interface ) it taking the data from heap to permanent file
- [ ] All properties must be private
- [ ] It should have no arg constructor 
- [ ] It may have setter n getter methods
Audit properties of DTO
Properties 
Created by
Created date
Update by
Update date

Audit class must be abstract class bcz it is incomplete and we still dont know whose data it is ( create n update) , it is completed by sub class
We get FQN from toString method for that reference 

By using the repositoryname.super. Method name we can inherit the methods from sub class and it came from default method

Service: is a datatype/class which is used to write business logic and validation
Repository: to data store, methods to perform crud operation 
Tostring is to just display 

Collection 
collection is an interface used to represent the group of individual objects as a single entity
Collections is a class(java.util) in java using which we can sort the elements in collection
It is a class 
It is a customised non primitive data type 
It is a interface 
It is in the java.util
Jar files : collection of .class 
Arrays limitation ::operate over index only and it doesn’t have methods to operate 
Collection was introduced to address the limitations of arrays
Collection used to store thé references with methods
<E> is a diamond operator which is used to declare the generics ( similar data types)
We can’t store primitive datatypes in collections 
Use of collections: to group the reference 
Array list : allow the duplicates and follow insertion order
HashSet : dont allow the duplicates and not follow the order
Whenever we access the element by for each , always tostring method called (not fqn)
Loop accessing: for each(this is used when we are sure that collection are not modified), iterator , stream  
Iterator will. Allow access the elements from collection
This is used when the collection are modified and avoid the exception even after modifications 
Itertor has 3 methods:
boolean hasnext();
Elements next();
void remove();
Iterator follows the curser ( on top of array list) hasnext——-> next();
Concurrent modificationException is thrown when we used the for each and made the modification 
Iterator (); method will return iterator implementation type 
Iterator interface provides the facility of iterating the elements in a forward direction only.
Main advantage of collection: access it , searching, sorting n ordering easily 
Tostring it will represent an object as string
remove method internally works as equals method
Collection remove method returns boolean where it will check the ref and remove which is not guaranteed remove where as iterator remove method returns void which will guaranteed removal 
Contains method internally does equals method
Containsall, addall, remove all requaires the reference of collection
Collection.remove(obj) depends upon the equals method
Itr.remove(); doesn’t depends equals method 
Casting is done to access the properties of subclass 
Parameter of equals method is Object
Remove , contain, containall , removeall uses equals method
Collection works properly only when we override the equals method
List.add —-> it will add element to next index
List.set—-> it will replace the element wrt to that index
Ref added to collection is called elements 
Sql installation steps:
Custom-server-8.0-8.021-
Excecute

In stream method ,filter method is used when there is a condition to check
Lambda expression— ()->{}
Paranthesis is optional when a ref is only one
Body is optional when there is a one statements 
-> is mandatory 

Linked list: implementation of queue(circular queue, it works on node where one node is linked with other node
Linked list is slower while reading(bcz it will start from beginning) and   Faster while updating compared to arraylist which is faster while reading(bcz it start from perticular index) n slower while updating(bcz it has to create new array to fit all elements) bcz it needs to update all the index.
Linked list node: head-tail
Map : it is a set of keys and values
￱it's an interface
￱used to store group of references in form of key & value
It works in the concept of dictionary 
￱key is unique & value can be duplicate
￱hierarchy : Map-->has subtype-SortedMap(TreeMap)
      implemented by HashTable & HashMap(LinkedHashMap)
Properties is also implementation of map
￱entry is an reference in map like element in collection 
￱methods :                                                  1)put - to add entry,                                 2)size - check capacity,                     3)isEmpty - to check entry presence, 4)keyset - to access only keys,                      5)values - only values access,         6)entrySet - access key & value together
￱declaring map in 2 ways - with generic & without
￱access 3 probabilities :                            1)only keys - keySet                                                    2)only values - values                                              3)both - entrySet
Sorting map: use treeMap implementation 
Map doesn’t have stream method

HashMap is non synchronized and not thread safe.On the other hand, Hashtable is thread safe and synchronized.
HashMap allows one null key and any number of null values, while Hashtable do not allow null keys and null values in the Hashtable object. hashmap is fast and hashtable is slow

Serializable is the ability to transfering objects across the networks (storing the data from memory to permanent database)
comparator is a interface used for custom sorting.serializable is a just a label for java  that tells java that the class can be written to things like database and files


in eclipse while creating new project we use classes/standards(folder name) instead of bin, bcz bin is for a windows standard ,but classes used to store the byte bytecode  

without initialisation local variable cant be used
A class is a group of objects which have common properties. It is a template or blueprint from which objects are created. It is a logical entity. It can't be physical.,it will not use the memory
Instance variable doesn't get memory at compile time. It gets memory at runtime when an object or instance is created. That is why it is known as an instance variable.

In java, we have 7 non-access modifiers. They are used with classes, methods, variables, constructors, etc to provide information about their behavior to JVM. They are as follows:static,final,abstract,synchronized,transient,volatile,native
Interface :
- it's a keyword
- it's a non-primitive data-type
- connection/bridge between 2 systems/classes.
- never use literal way to initialise.

StringBuffer is mutable means one can change the value of the object . The object created through StringBuffer is stored in the heap . StringBuffer  has the same methods as the StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread-safe. 
StringBuffer demo1 = new StringBuffer("Hello") ; ------->,demo1 = new StringBuffer("Bye"); 
 
StringBuilder  is same as the StringBuffer , that is it stores the object in heap and it can also be modified . The main difference between the StringBuffer and StringBuilder is that StringBuilder is  not thread safe. 
StringBuilder is fast as it is not thread safe.
StringBuffter and StringBuilder are mutable versions of string


Marker Interface :
- method without body 
- taking data from heap(temporary memory) to file(permanent memory) is Serializable, vice-versa is de-serializable
- ex : Serializable, randomAccess
transient keyword in Java is used to avoid Serialization.  If the variable is marked as transient then it will not be serialized.
If a variable is marked as volatile then this variable is read from the main memory instead of cache memory.

Functional Interface :
- interface with only one abstract method & can have static/default methods 
- syntax : interface Class name{
                abstract MethodName(); or void MethodName ();
                 }
- @FunctionalInterface annotation optional 
Lambda Expression : 
- ()->{}
- () to contain references based on parameters
- -> separates arguments from body
- used when there's functional Interface
- no data-type is specified
- passing a function as an argument
- based on parameters & return-type of method 
- body is optional but required when multiple parameter

collection.forEach method :
- used to loop all elements

SPRING: it is a framework to manage the objects
why spring? it is flexible,fast,productive,secure,supportive,manages objects easily.
Maven :
it is Project management tool 
It will be used to download the jar (libraries) files
Dependency are jar files from maven.

Spring-
It is a framework , framework is a solution to common problems
Spring is not about coding its about configuration 
Spring is mainly used to manage objects 
Manage: create, initiate, destroy (CID)
Bean is a object which is managed by spring 
Meta -info : is a data of external systems 
Meta-info~~ spring~~ bean
@configuration: making class as to provide configuration which passes the meta information
@component: mark so that spring can manage object and create instances.
It will look for no argument constructor
@componetscan: to scan the component in perticular package , after that it will create instances  , it should be in configuration class
@bean is used when we have only .class files where u have to create class and spring will manage the object
@bean will register an object
@component is used when we have .java and spring will create and manage the object
Whenever a object manages other objects it is called as container ex: Applicationcontext(interface)
Primary container/hierarchy of spring: beanFactory(core container , dont support AOP,has only XML support ) ApplicationContext(advanced container with more feature,  support AOP,has annotation n reactive programming)-WebWpplicationContext (support webApplication development)
AOP: aspect oriented program( it is a programming style)..AOP isolates the concerns of your application, reduces code clutter, and improves the maintainability and readability of your code.
bean names: when we have two or more beans of same datatype
@bean is only used on top of the method , not constructor or class
@Value: to initialise the variable in string litteral here it can be loaded from outside class or file
It is used only for primitive, string n wrapper classes ,not for custom types
When we use java literals initialisation in spring (=“”) it will be hardcoded and cant load from outside class (file)
@value cant be used within the method and over the @bean
GetBean method: needs ref of container
AutoWired method : needs component @autowired is annotation to get the ref of other bean managed by spring, it also initialise the bean of custom type
@Qualifier:to refer a bean by name  when there are multiple objects
tostring will loop and access the references
Spring is designed by following IOC(inversion of control) where the task is done by third party
IOC: Inverting the managing  of object via spring
DI: Dependency Injection , it is different from maven dependency 
It is getting the ref of an object
It is done 2 ways : by property and constructor and also with setter
M2 folder in maven project is a repository 
$ in maven is a expression language
Spring is a DI framwork
When beans are combined together within the Spring container, they are said to be wired or the phenomenon is called bean wiring.
Primitive data types, Strings, and Classes can’t be autowired.
Quarkus and lombok
@notblank/notemply: for only string
@notnull:for for any non primitive 
Spring will not manage the dto class as the properties in dto will change
In industries SOP is not used as it cost performs as sop will use many processes in a system after coming out
Logger is used to print 
Server: is a computer which serves the resources 

Servlet- is a interface or a small java program which runs on web server
servlet hierarchy --- Servlet(5 methods)--->1.GenericServlet(one abstract method
                                            2.HttpServlet(no abstract methods) it better a subclass to extend this
Servlet init() Method. The servlet container only calls the init() method once in a servlet operation. ...
Servlet service() Method. ...
Servlet getServletConfig() Method. ...
Servlet getServletInfo() Method. ...
Servlet destroy() Method.											
200 code when resource is available 
404 : when resources is not available 
500:issues in resource 
2 types of server : computer and software 
Server : software and hardware 
Server: apache tomcat 9
Context : files in webapps tomcat 
To connect server:
http://localhost:8080/context/resourcename.extentions
Ex:http://169.254.51.3:8080/avatar/chocolate.png
Here https should not be used , http is for local network and https for secured one
http://google.com is. a vanity /f5 URL
google.com is a domain
google  is a domain name
.com is a domain type
Content-type/MIME type: img,mp3,pdf.. etc

Without form in html we cant call java program 
Tomcat container will manage object if it is a object of servlet (extends httpservlet)where as spring will manage all object
There should be no parametrised constructor in the servlet class as tomcat get confused which argument to pass
Tomcat will create only one object at one time and initiated properties only once and will call domethods n times
HTTP(): it will transfer the text(byte) over network 
POST(create), GET, PUT,DELETE method
Get method is defaultly called when server respond
Error 405 occurs when httpmethod is not equal to domethods of servlet
Service method will check the domethods
Tomcat act as bridge between servlet and client
Content directory: src/main/webapps where static files will be placed like html
Action in form is to map the servlet
Loadonstartup : tell server to create object on sequences 
First request: when we dont give loadonservlet , server will create on requests 
Requestparameters: url ? parameternames 
? It will separate the url and parameters 
Backward compatibility:
Server lifecycle: initi , service, destroy methods
Service starts when req is sent
Destroy called once when we shuttdown the server 
Init method to : to initiate the resource of servlet
Destroy method: to clear the resource of servlet
Req parameters: data we send to back
 


get method :carried in URL ,limited data(2020 characters )1mb ,it will load a resource
post method: carried in body ,un-limited data create the data send the data
JSP: Java Server Pages—-> html+ java
Jsp is a format which allows to write java , 
* It is a server side technology.
* It is used for creating web application.
* It is used to create dynamic web content.
* 
* JSP is a technology to create dynamic web applications while HTML is a standard markup language to create the structure of web pages.

after loading the jsp server will create java file
Requestforward: forwarding req from server to Jsp
SetAttribute is to send the data from server
HTTP is a stateless protocol bcz it will not remember client
Spring Web MVC(model view controller )
War : web archive
Inside src- java and test
Front controller : design pattern, is a servlet which maps all the req come to application
Ex: dispatcherServlet
@Data: lombok will create all getter, setter, tostring
@Getmapping will map the method
@requestmapping will map the class and send to server
Controller classes any class interacts with UI(user interface) and process the request , it will navigate the page
Webcontainer: will create component (controller) , Handlermapping(I),ViewResolver(I)
Hetswrveletconfigclassss method help to pass configuration classes to spring 
Model is to send the data to response 
Addattribute is : in keys and values
Error 500 in server is a exception in java program
If we use scriplet we have to write java in jsp
If we use JSTL( Java standard tag libs) we can use tags to get complex data
Getservletmapping: mapping action to dispatcherServlet.”/” which denotes action
Getservletconfig: helps spring container to create component 
Getrootconfigclass: listener
Only form actions will map the dispatcher selrvlet.
configuredefaultserverhandler:enabling server to handle static resources like html, css, pdf by default .
Dispatcher servlet will be managed by tomcat
Handlermapping: to find the controller in spring mvc , it will scan for the @requestmapping( key is always url and value is component)
controller: getmapping, postmapping. Wecan extract data from @requestparam or dto and returns the page name( index)
Viewresolver: it will resolve the view and find the page in webapps root
@component used for generic 
@service and @controller used for improved readability 

Connecting to DB
Client—-controller—— service——-repo—- storing in database
Database doesn’t know about object.here JPA(Java Persistence Api) will save the details of dto into database
Setup to connect to database
1.hibernate-core 
2.spring-orm
3.persistence.xml
4. Entity
5. Mysql drive
Sequel is a programming language (SQL)
Ada Lovelace : first programmer in the world
Protocol: vendor://host:portno/schema-name
User: root
For JDBC : mysqul://localhost:3306/schema-name
We keep credentials of database
@Entity: using this class we map the properties to DB —-@Entity @Table(name=“”) these coming from javax.persistence 
@Coloumn (name=“”)
@ID above property is to denote as primary key 
In service : we inject service into controller and invoke method of service in controller 
DTO: it is mapped with UI.
Entity: it will mapped with table(DB).
For a href link the method is always get
Figma is a UI tool
Bean called LocalcontainerEntityManagerFacyoryBean to create EntityManagerFactory (EMF)
Inject EMF to repository

JDBC (Java database connectivity) it is a API which connect java and database
Package: java.sql
We need interfaces and implementation of vendor jar files to connect to database.
Issues with JDBC: data is always in the form of object, JDBC understands only queries(sql) bcz objects has is-a and has-a relation where as jdbc has primary key and foreign key relation, cant store DTO directly to DB, we have to convert object in values,
to over come this ,JPA(java parsistence API) used  which will convert object of java to values and stores in DB
JPA will store and retrieve values from DB
ORM- object relation mapping .it is a guideline to map object to relational model.
Hibernate is a community to save object to DB .anybody solves 5 problems will be called ORM tool ex: Mybatis,Toplink,eclipselink
5 problems : association, inheritance,grain, navigation,identity 
JPA is a API provides standards to solve the ORM problems, it is implemented by hibernate 
JPA is a interface and hibernate is a implementation .
Hibernate is not used directly bcz if we change the vendor we have to change the code .
When we use JPA we can change vendor without changing the code.
Controller knows only dto
Repository knows only entity 
Service knows both
Orm: javax.persistence 
Component has many parts like : controller,service, repository, entity
Components of JPA: persistence,EntityManagerFactory(I), EntityManager
Components of EntityManager:entityTransaction, Query,criteria 
Persistence: method createEntityManageFactory- this method look for META-INF/persistence.xml, it will look for unit name,create entity manager factory( use of persistence.xml to create entitymanagerfactory)
We can use one xml file and connect multiple database
Properties of Persistence: driver,url,user,password,dialect,showSql,formatSql
entitymanagerfactory(heavy component )is a information of unit of persistence and try to configure and connect to the data base, EMF will create and manage connection pool(memory, it is a interface, java.sql.connection will represent the db)
EMF will create the EntityManager( it create n number of EM)
EM is used to perform CRUD operation( in db :insert,select,update,delete) EM can perform operations on multiple table.
Em will create entityTransaction,Query,Criteria 
Transaction is needed whenever u want to save data permanently(save and read=write ), for only reading transactions is not needed(optional), for this there is a find method, to update use merge method(update), to delete use remove method all these done using the Id 
Query: needed for sql and jql ,Query wil not do insert
Criteria: to get results without writing query , it will do select without sql
CreateNamedQuery; to create query ,this needs a entityManger component 
Close();
getCriteriaBuilder: to create criteria 
persist();- to insert 
commit(); to save
Jpa write a query when we invoke the persist method. Jpa convert object into values
Jar packaging : for standAlone java project
war packaging: for Dynamic java project
@GenerateValue(strategy=generatetype.Identity)to make java to ignore id values
In namedquery we should not hardcore the values , it should be set at runtime
Close(); to release the the EM back connection pool otherwise it will leads to resource leakage 
hikari used to manage the connection pool ( increasing or decreasing)
If there is a exception, close(); will not released , so close(); is used within the finally block
We should always release the manager back to connection pool
LocalContainerEntityManagerFactoryBean-it will create EMF with customised ,
Datasource : to connect the DB without persistence.xml , it is more user friendly

Spring MVC is request driven framework and one of the core components of the Spring framework.
It comes with ready to use loosely coupled components and elements that greatly aids developers in building flexible and robust web applications.
The MVC (Model - View - Controller) architecture separates and provides loose coupling between the different aspects of the application – input logic (Model), business logic (Controller), and UI logic (View).
DispatcherServlet  handles all the HTTP requests and responses.
The default ViewResolver used in Spring MVC is InternalResourceViewResolver
@Autowired annotation is meant for the injection of a bean by means of its type along with methods and fields.

POJO stands for Plain Old Java Object. It is an ordinary Java object, not bound by any special restriction other than those forced by the Java Language Specification and not requiring any classpath. POJOs are used for increasing the readability and re-usability of a program..
POJO class cant extend any other classes,cant implement any interfaced,and wont use outside annotation
POJO is a simple class with no extra stuff,it is a class which is used on its own
POJO and JavaBean difference:java bean has no args constructor,properties must be private,getter setters,must be serializable.
A JavaBean is a Java class that should follow above criteria.

Boilerplate code=In computer programming, boilerplate code, or simply boilerplate, are sections of code that are repeated in multiple places with little to no variation.

Generics offer you the ability to have one class which is flexible for many datatypes.generics dont work with primitive types
object type should not used it will cause type safety issues n we may get classcasteExceptions
in generics T can Extend other class and can specify the type
wild cards in generics =<?> by passing the question mark as parameter which is called as wild card 	it is used when u dontknow that generic type what exactly it is
Bounded WildCards when one generic type extends other in wild card

Lambda Expression=it is used with only certain type of interface
Lambda is a short cut to define an implementation of a Functional interface
	 * in lambda compiler knows return type automatically,in this access specifier
	 * is not need and dont need the method name
	 * () is not needed for single parameter
	 * Lambdas can be only used in the context of Functional interface
	 * if interface has more than one abstract methods ,we cant use lambda expression
	 * In Lambda we are only able to define the implementation of one method
	 
Java Anonymus class:

Why string is immutable...?:reasons ->to save the java memory,for security reason,,for thread safe	 

Optional:it is a datatype used to improve the readability and to avoid nullpointer exception
Java 8 features: lambda, FI, default methods,for each methods, stream,optional, executors,method reference 
Optional has 3 static methods: Of,Ofnullable and empty
Of methods is used when we return reference
Ofnullable : ref is there or not there
Optinal is mainly done to improve the readability 

Thread’s:thread is a inbuilt object , it is also a class which helps in parallel execution of methods , it depends upon OS and scheculer
Path: java.lang
Without threat Jvm cannot exits 
Jvm will always create a thread , then thread creates a stack
Thread. slepp(); to pause the thread(in miliseconds)
Programs are always executed in thread
Thread is created only in one way
2 ways to execute thread: by Thread and Runnable (implement)
Writing a thread and execution of thread is different 
To write a thread : create a class and extend it by Thread and override run method, in run methods we write all logics to executable in parallel, run method is from runnable
to execute thread : thread.start(); 
Garbage collector is called as daemon thread , it will run in background 
Runnable is a fictional interface which is implemented by Thread 
There is no guarantee when run method will execute and end , jvm will call the run method
Producer consumer problem uses thread
States of thread 
Synchronized : making only one thread execute the given method at a particular time , it is used with the method declaration and put there a Lock(Monitor)
Stringbuffer is a synchronised
Synchronized blocks 
Deadlock : when we lock method permanently
Hierarchy: Runnable—> Thread—>subclass 
Thread life cycle: new—runnable—running—(sleep,wait,suspend) —terminated 
Synchronized block(sync {}) will written when we dont have a Synchronized method , block will allow to write method in it
Executor:

transient is a variables modifier used in serialization. At the time of serialization, if we don't want to save value of a particular variable in a file, then we use transient keyword. When JVM comes across transient keyword, it ignores original value of the variable and save default value of that variable data type.

Scope: it is to configure spring to create and manage the instance.
it is number of instances, by default spring will create one instance bcz it follows singleton pattern,@scope will create multiple instances .@scope(“prototype ”)- for multiple instances, it will create using reference ( autowored or getBean)
@scope(“singleton”)- it is a default scope.
If it is prototype , then it will not pre-destroy and it will not complete the bean cycle.
Singleton scope will complete the bean cycle , it will predestroy method
jhipster- to create the entire project automatically 
5 scopes: singleton, prototype,request(web application ,created per request ),session(web application ,created per session ),global 
Code redundancy/ code duplicate 

Postman is a standalone software testing API (Application Programming Interface) platform to build, test, design, modify, and document APIs. It is a simple Graphic User Interface for sending and viewing HTTP requests and responses.

Restful Web Services is a stateless client-server architecture where web services are resources and can be identified by their URIs. REST Client applications can use HTTP GET/POST methods to invoke Restful web services.
Every content in the REST architecture is considered a resource. The REST Server provides access to these resources whereas the REST client consumes (accesses and modifies) these resources. Every resource is identified globally by means of a URI





Microservices are an architectural style that develops a single application as a set of small services. Each service runs in its own process. The services communicate with clients, and often each other, using lightweight protocols, often over messaging or HTTP.

A stream is a sequence of objects that supports various methods which can be pipelined to produce the desired result. 

 *set,unlike list wkill not follw the instertion order 
 * dont allow the duplicates
 * with set we cant remove the element by using the index number unlike list
 * set maintains the uniquness via the hascode for each element and this set implementation uses hashTable as
 * its storage mechanism behind the scence
 •	Maintain unique elements by overriding equals & hashCode
 * Treeset-for natural ordering ()ascending  default
 * why to use hasSet over TreeSet bcz hash set is way faster than tree set
 * tree set used only when we care about ordering the elements
 * LinkedHasSet-it doesnt maintain natural order but it maintains the insertion order

AWS Notes-
Amazon Web Services (AWS) is the world's most comprehensive and broadly adopted cloud platform, offering over 200 fully featured services from data centers globally.
it is a global cloud platform which allow u to host and manages service in internet.
it is used by 80% of fortune 500 countries.
3 basic types of services=compute(control and manage application),storage and newtworking
it provides infrastructure,software and platform services.


Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides secure, resizable compute capacity in the cloud. It is designed to make web-scale cloud computing easier for developers. Amazon EC2's simple web service interface allows you to obtain and configure capacity with minimal friction.

Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. You can use Amazon S3 to store and retrieve any amount of data at any time, from anywhere.

Amazon Relational Database Service (Amazon RDS) is a collection of managed services that makes it simple to set up, operate, and scale databases in the cloud.
Since RDS automatically manages time-consuming tasks such as configuration, backups, and patches, you can focus on building your application. Amazon EC2 cloud computing platform lets you create as many virtual servers as you need. You should manually configure security, networking and manage the stored data.

AWS Elastic Beanstalk automates the details of capacity provisioning, load balancing, auto scaling, and application deployment, creating an environment that runs a version of your application. You can simply upload your deployable code (e.g., WAR file), and AWS Elastic Beanstalk does the rest.

Rest API-(Representational State Transfer),it is a standardised software architectural style
communication of client and server,restfull
benefits- simple/standardised,these are scalable and stateless which we can modify,high performance.

AbstractAnnotationConfigDispatcherServletInitializer is a base class to initialize Spring application in Servlet container environment. It's an extension of WebApplicationInitializer(Interface).

MVC-architecture:
•	When tomcat server starts looks for class implementing web-application-initializer for creating object
•	web-application-initializer create object for DispatcherServlet & web-application-context(spring container)
•	web-application-context registered with DispatcherServlet – HAS-A relationship
•	DispatcherServlet registered with tomcat - HAS-A relationship
•	web-application-context creates 3 objects before registering DispatcherServlet  –
1)	components/controller
2)	handler-mapping
3)	viewResolver
•	getServletConfigClasses – helps spring container to create object of component
•	listener – getRootConfigClasses,contextLoaderListener event connected to object to give response
•	getServletMappings – mapping action to DispatcherServlet, “/”denotes action
•	ConfigurerDefaultServletHandling – enabling server to handler static resources like html,css, ‘super’ keyword here for to call default keyword methods particular interface
•	DispatcherServlet  manages 3 components – helper components
1)	Handler-mapping –
o	Interface
o	Purpose is to find controller in springmvc by scanning key which is used to be same as url if not gives 404
o	If key & url matches handler-mapping sends controller-name(value) to DispatcherServlet  which involves @GetMapping/@PostMapping
2)	Controller – 
o	Process the request by looking towards @requestParameter/DTO
o	Page-name is the response from controller to DispatcherServlet  
3)	ViewResolver – 
o	DispatcherServlet consults this to give page-name & try to find file which gives back to DispatcherServlet
o	Puts “.jsp” to page-name(ex index.jsp)
•	viewResolver bean in configuration avoids extension – InternalResourceViewResolver

"/" is given in viewResolver to find the path of the jsp file.
JPA and Spring are integrated via the localEntityManagerFactoryBean which will create entityManager. 
Compiler knows there is a exception by looking throws keyword in methods.
server creates a DispatcherServlet by loooking the webInit class which extends AbstractAnnotationConfigDispatcherServletInitializer.

SQL injection is a code injection technique that might destroy your database. SQL injection is one of the most common web hacking techniques. SQL injection is the placement of malicious code in SQL statements, via web page input.
SQL Injection Based on OR ""="" is Always True

Tight coupling is not good bcz it reduces the flexibility and reusability of the code and it makes changes much more difficult

JIT(Just In time) Compiler helps improve the performance of Java programs by compiling bytecodes into native machine(other than java like C n C++) code at run time.it will reduce the required time to recompilation

types of classloader -bootstrap class loader(loads rt.jar files) ,extention class loader(child of bootstrap CL ,it will loads the jar files located in lib.extn directory),application/system class loader (child of extension CL ,it will load the class of class room)

class should have default constructor to be serialized
Static methods in interafce is to write some utility codes and directly called without creating the object
Spring RestController annotation is a convenience annotation that is itself annotated with @Controller and @ResponseBody . This annotation is applied to a class to mark it as a request handler. Spring RestController annotation is used to create RESTful web services using Spring MVC.no need of writting explicitly the responsibilsity

Cat myCat=null; ------> null pointer exception(unchecked exception)
mycat.makeNoise();

try{
in this we write any code that might cause the exception
}
catch(){
use to catch those types of exception and then write any code we want to execute whenever that type of exception
this block will use exceptional heirarchy and will catch those exeption we declared in that block,to catch any type declare as Exception
}
catch(NumberFormatException | NullPointerException){ to catch multiple exception
}
finally{in which release operation occurs n cleanup activity }- we can avoid finally block by system.exit 	
return statement in finally will override the return statement of try,finally is used in database call or some file input output ,whenever we want to close the connection to database or stream

Checked exception is checked at compile time -handle this by throws or surround with try catch block ex-ClassNotFoundException, SocketException, SQLException, IOException, FileNotFoundException
all sub classes of RuntimeException are unchecked exception ex-NullPointerException, ClassCastException, ArithmeticException, DateTimeException, ArrayStoreException.

Super Keyword-it is used to access things from superclasses - super.makenoise();
super is used when you specifically want the parent classes implementation of method that we overridden in subclass
super is used only inside a class to refer its parent classes
super cant be used to access the private methods
it is used to chaining and avoid code duplication
super must be the first thing....

This keyword-it is not used in the static conext,used to call another constructor(should be first line)
System.getProperty.

Public Static void main(String[] args)
JRE has to call main method to trigger the program (MainMethodExplanatin.main(args))
public-method has to be callable by something outside of the class 
static-method can be called on a class without needing an instance of that class
void -return type main method doesnt return anything,no neeed 
main-method name
String[] args-sop(arg[0]) -it is used to hold the command line argument in the form of string values.

Upcasting-when u take an object and cast it to its superclass type i.e parent type ,it works automatically (wide casting)
Downcasting- casting it to one of the sub class (narrow casting)

The XMLHttpRequest object can be used to request data from a web server--Update a web page without reloading the page
Request data from a server - after the page has loaded
Receive data from a server  - after the page has loaded
Send data to a server - in the background

AJAX(Asynchronous JavaScript And XML.) is a technique for accessing web servers from a web page
AJAX is a misleading name. AJAX applications might use XML to transport data, but it is equally common to transport data as plain text or JSON text.
AJAX allows web pages to be updated asynchronously by exchanging data with a web server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.
The keystone of AJAX is the XMLHttpRequest object.
The XMLHttpRequest object can be used to exchange data with a server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page.
All modern browsers (Chrome, Firefox, Edge (and IE7+), Safari, Opera) have a built-in XMLHttpRequest object.
Syntax for creating an XMLHttpRequest object:variable = new XMLHttpRequest();
GET is simpler and faster than POST, and can be used in most cases
Server requests should be sent asynchronously.
AJAX can be used for interactive communication with an XML file
AJAX is used to create more interactive applications,with DB.
PHP scripts are executed on the web server. This differs from AJAX which is executed on the client-side. 
The full form of PHP is Hypertext Preprocessor. It was abbreviated previously as Personal Home Page. It is a programming language widely used to build web applications or websites. It is the server-side scripting language encoded with HTML to develop Dynamic website, Static website or Web applications.

" Document Object Model (DOM) is a platform and language-neutral interface that allows programs and scripts to dynamically access and update the content, structure, and style of a document."

Recursion is the technique of making a function call itself. This technique provides a way to break complicated problems down into simple problems which are easier to solve.

JavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else
JS can run inside and outside of the browser n we can pass our js code to node for execution
ECMAScript is just a specification where as JS is a PL which confirms its specifications
we can write JS without any additional codes

Jenkins-
it is a populer continous integration tool that allows countinous development ,test and deployment of newly created codes
other tools like jenkins-Bamboo,apache group,buildboot,travis circular
jenkins is the core of devops
JAVA_HOME contains path of JDK
continous integration server validates ,passes the test created,it will allow the builder not break the build  and no need to run the all test locally on their computer
hudson was original product of junkins...
featurs of jenkins-
1.easy installation(jenkins is a self contained java based programn ready to run with packages)
2.easy confugaration(easy set up and configure via its web interface with built in help)
3.plugins(heart n soul of jenkins) which integrate with every tool in the CI and  CD toolchain
4.extensible-it is extended via its plugins architecture n fit into the environment
5.distributed-can easily distribute works across multiple machines

Jenkins Pipeline- code commit-->jenkins will build--test--release env--deploy/deliver realy quickly
Jenkins architecture- source code repo--jenkins(CI server)--build server(maven)--test server(to execute via selinum)
jenkins will not allow multple files or builds to be executed on a single server for that we need multiple server env

jenkins master slave architecture/Distributed build-
jenkins master pulls the code from repos(from git) everytime there is a commit ,here jenkin server acts as the master env which will push out to other multiple slave env to distribute the work flow simultaneously
slaves will run the diff build versions of the code for diff OS  and server master will control how each of those builds operate.
jenkin doesn’t know what kind of code it pull in ,build set
cloudbees is a part of jenkins used by Bosch
jenkins has bunch of plugins like bigbucket for github,maven,aws,sonarqube(to check the code quality),docker(to run anywhere),ms build

Steps
install jenkins n link with java path(jdk)
get plugins 
create first admin user to complete jenkins
configuration -using 'manage jenkins'--no of executor--SMTP authorization using gmail to send the mail ,instal plugins like role based authorised strategy ,after this restart jenkins 
configure global security using own DB or companies,to see the plugin installed after this you will see manage and assign roles like groups(like global,project and slave roles) 
Save
new item - to create new job n select the type like pipeline,freestyle n excute commands n save
build now- to run and console output
build trigger- to schedule in minutes
source code management to connect to source code by giving the url ,on behalf of us jenkins go the given url and pulls all the codes and saved in local system
port number of tomcat and jenkins should not be same to connect each which will create war file
context path-it is just name of application under which it is get deployed in server

Distributed build-set up slave n delegate job to that
JNLP-java network launch protocol which helps in communicating the client and server(or communicate master and slave) by enabling (select random)  in agents secton of configure global security and copy the path of slave in remote root directory in Nodes section n give label to identify
agent.jar-to launch java folder where multiple task can paralley run n represents node
we can backup using plugins in backup manager in manage jenkins-it can slow down the servers

what is pipeline in jenkins2.0-it is a suite of jenkins which implement and integrate countinous delevery
'post build action' to link n trigger one job to another ,to visualise  the linking install a plugin called 'delivery pipeline' plugin and create new visualization..
pipeline can be written groovy script n pipelines return as script 
in new job select pipeline  n put pipline script
pipeline syntax which gives script
2 type of pipeline-scripted(groovy) and declarative(provide simple n friendly syntax to write pipeline)
pipeline is nothing but configuration


Sending mail
add dependency (javax.mail)
SMTP(simple mail trasfer protocol) protocol
host name n port number


Design patterns are an essential part of software development. These solutions not only solve recurring problems but also help developers understand the design of a framework by recognizing common patterns.
The advantages of design patterns are:To provide standard terminology that everybody understands and Not to repeat the same mistakes over and over again

Types-
Singleton pattern-
Factory Method pattern-The intent of the Factory Method pattern is to create a family of object types.
Proxy pattern-A Proxy is an object that represents another object.Your debit card is a proxy for your bank account. Whenever you make a transaction using a debit card, the corresponding money is deducted from the bank account.
Template pattern-The Template Method pattern is used to defer the exact steps of an algorithm(house construction plan), to a subclass. ex AbstractController 
The Observer Pattern- The Observer pattern is a way of notifying a change, to a number of classes.
The Strategy Pattern-The strategy has the task of encapsulating an algorithm inside a class. 
The State Pattern is used to alter an object’s behavior when its state changes.
The Iterator pattern-to access those elements sequentially
A Flyweight pattern represents creating a fine-grained instance, that is being used for efficient sharing
An Adapter pattern is used to match interfaces of different classes
A Facade pattern is a single class that represents an entire subsystem.
The Decorator pattern allows us to add responsibilities to objects, dynamically.
The Builder Pattern separates object construction from its representation.



Collection is called interface in java whereas Collections is called a utility class in java and both of them can be found in java. util. package. Collection is used to represent a single unit with a group of individual objects whereas collections is used to operate on collection with several utility methods.



WebService--services deliverd over the web -it is a softeware system designed to support interoperable(platform independent ,whether devolpeb by java ,.net,PHP application) machine to machine intercation(communication over a network) over a network.
datas are exhanged through request and response
XML is popular message exchange format for request n response ,same as JSON
Service Definition- it is contract between service provider and consumer(it will send req/resp format,req structure,resp structure,endpoint..)
Transport-it defines how service is called (HTTP and MQ formats)
MQ-communication over a queue(Web sphere to tranport)
Groups of webservices
SOAP(Simple Object Access Protocol)-poses poses restriction over XML format between service producer n consumer
SOAP tells specific way of building webservices,in the XML used as response exchange format,SOAP defines specific XML req n resp ,SOAP doesnt pose any restriction on transport
SOAP Body-it contains SOAP envelop  which has header(it contains meta info like authentication,signatures,it is optional) and body(it has req n resp)
in SOAP service definition done by WSDL(Web service definition language) which defines end points of service n where operations are exposed,adding course,deleting
Structure of WSDL-endpoint,all operation,req service,resp service.

Rest-it defines architectural approach,tern coined by Roy fieling,this REST will make best use of HTTP 
Rest=ajax+http  (methods n status code)
REST will defines the services using different concept of HTTP that already present
resource-Every content in the REST architecture is considered a resource. (/user/jagadeesh/list)
resource can have XML,HTNL,JSON
URI- for identifying each resource of the REST architecture.
format---- <protocol>://<service-name>/<ResourceType>/<ResourceID>
REST is completely build on HTTP,no standard service defn like WADL/Swagger
REST vs SOAP- 
SOAP -its a format of xml,data excahnge is always in XML,standard definition,no restriction on transport(web or MQ),not easier to implement
REST-architectural style,no strict data exchange format (can be xml,json),no standard defn,transport is done only through HTTP
, these are easier to implement
we can build REST api without spring boot then why SB -to provide best framework.
how to build Restweb service-
import dependency from spring web,use created class with SPA annotation,run as java application

how req are handelled- 
first goes to DS irrespective of the url bcz DS is mapped to root url [/]
DS map to controller
DS is auto configured by "DispatcherServketAutoConfiguration"
how Bean object is converted to JSON - by response body(used @restcontroller) + jacksonHttpMessageConverters
who is mapping error mapping whenever we type wrong url ?-- auto mapped by "ErrorMvcAutoConfiguration"
how are all jars are available like spring,springMvc,jackson,tomcat - bcz of 'starter project' which downloads these jars

path variables //user{id}-- to retrive perticular details

GET- to retrieve details of resource
POST- create new resource
PUT- to update an existing resource
PATCH- to update a part of a resource
in industry rest api is build with plurals

Talend API Tester makes it easy to invoke, discover and test HTTP and REST APIs. ---add this chrome extention in chrome ,this is mainly used to send the data....
 200-success, 201-created, 204-no content, 401-unauthoriised , 400-bad request, 500-server error

to make proper response structure use @ResponseStatus(code = HttpStatus.NOT_FOUND) //it will show message in 404
springboot devTools is disabled when you run a java JAR file

@ControllerAdvice is a specialized form of the spring's stereotype annotation which allows handling exceptions across the whole application in one global handling component.

whenever u build restApi  u should think in consumer perspective..

Advance features od Rest Api-documentation(open Api),content negotioation(json),interbationalisation(i18n),Hteoas,filter,monitor
challenges-accuracy(upto date),consistency,
Rest api documentation by-swagger(it is format for visualising the specification for documentation,it has various tools) and open api(it uses swagger,it is a language agnostic api,it helps in discover and understand rest api),swagger UI is to visualize and interact with rest api(where u will see all the details of controller)
content negotioation-which gives content in diff form(mime types) n language for the same resource which helps consumer n producer to negotiate for the content type
interbationalisation(i18n) is for languages- it uses HTTP request header -accept languange is used
Versioning of rest Api- break change,ex-spling names like first n last name.types-url,header,mediatype,reqparameter
HATEOAS-(hypernation as the engine of the application state)-to enhance rest api in response with custom formats.
Filtering- static filtering(same filtering for a bean across diff rest api),customized filtering(for a bean of specific rest api)
serialization-is converting object into stream ex:JSON which is done by jackson (@JsonProperty)
SpringBoot actuator provides production ready features like beans,health info which is default,metrics,mappings
HAL(JSON Hypertext Application Language)-its a simple format that gives a consistant n easy way to hyperlink btwn resources
HAL explorer api explorer dor restful hypermedia api using HAL,it will enable non technical teams to play with api
@Entity by which JPA will manage the database
h2 is database lib to manage db
ambigous mapping-generic mapping using jpa



Volatile keyword is used to modify the value of a variable by different threads. It is also used to make classes thread safe. It means that multiple threads can use a method and instance of the classes at the same time without any problem.

using @configuration we can bind all  properties 

DI helps to create objects in a order which is automatic
5 types of DI-constructor,setter,autowired,circular(setter internally in which classes depend on each others),lookup methods(occurs in scopes).
IOC- or spring container
by construction injection(CI) partial injection is not possible(taking 2 variables out of 4 variables to create object) but it can be achieved by setter injection(SI),CI always create new object if any modification done which is not in SI,if we want pass all properties of bean in a order we use CI n if we want to pass only few properties we use SI ,CI doesnt overrride the setter properties but SI override the constructor properties

@Required is applied on setter methods ,when we use the property value should be initialized (will not take default values)
@primary is same as @qualifier which is used at bean creation by giving preference when there are multiple objects

different ways of writing lifecycle methods in spring-- 1. using XML(declarative approach) 2.using spring interface(programmatic approach :initializingBean,disposableBean) 3.using annotation(@postconstruct n @predestroy)

common implementation of ApplicationContext- FileSystemXmlApplicationContext,ClassPathXmlApplicationContext,WebXmlApplicationContext

stereotype annotations :when we use the annotation on top of class n objects are created
types-component,service,repositoty,controller,restcontroller

different modules of spring- coremodule,data access,web,AOP,instrumentation,testing

profile in spring- when we move our codes to diff env  they will be modified to avoid this we use profile
innerBeans -defining one bean inside the other bean ,it is used whenerver w bean is used for only one perticular property ,innerbean supports both CI n SI


ORM is a technique that act as bridge  between object oriented programes and relational database ,as every operation need to be in object format (save,update,delete,select),it is mainly used for DB operations.

JPA is one of the ORM specification ,it is a java specification used to persist data between DB n object n act as bridge.
Mapping rule of JPA-define one entity(pojo) class for the one table,define one variable for one column,then object is converted into one row.
Advantages of JPA-DB independent,easy to develop DB operations,supports JPQL/HQL,it will handle the datatype n parameters
3 JPA repository-crudRepository,pagingAndSortingRepository,JpaRepository (all three are interface)
JpaRepository works only for relational DB like mySql,oracle
pagingAndSortingRepository n crudRepository works for both SQL n NoSQL DB.
predefined methods given by Repository intrface-save,delete,findById,findAll,deleteById,count,existById,

bean wiring- linking two objects
modes of autowiring-no,byname,bytype,constructor,autodetect
@autowired(provided by spring) n @inject(provided by java EE framework used for non spring application)

SQL queries constructed using Table name n column name where as JPQL/HQL queries constructed using class name in place of table name and variable name in place of coloumn name
JPQL is the specification n HQL is the implementation
we cannt write insert queries using jpql

findById() vs getOne()- both used to fetch one row data
findById() present in crudRepository where as getOne() present in jpaRepository
if data is not found in findById then it will return null (optional) while getOne throws EntityNotFoundException

use of Dialect-dialect is a class defined in JPA ,all sql queries generated by dialect,if u move from one DB to another DB dialect should be modified EX- oracle10gDialect,MySQL8Dialect,PostgressDialect

FetchType in JPA -it is used for select operationd used for Association Mapping or collection mapping 
types -EAGER is to load both parent entity along with child entities ,LAZY is to load only parent entity n later can access child entity using getters
FetchType is a enum internally
there is no default fetchtype it depends upon the operation
LAZY is used for one to many /many to many ,EAGER is one to one /many to one in which child is one

Monolithic application problems-team dependency,scalability
microserces are individual services whichare self contained n run as individual service
microservices-scalled seperatlry,contained separatly ,one service can be developed by java n other by node 
even if one service goes down other is not harmed
how microservice communicate using api gateways,http request,


AOP-it is a methodology to create applications
Why Aop- flexibility to remove the cross cuttings from application,separates from business logic
we can achieve AOP using xml n annotation
//loggin,authentication,authoration,sanitization data which are separated called aspect
@before("execution") to execute before any other method
// @pointcut(within) - to execute a perticular class
@afterReturning-


Ajile- term refers to ability to move quickly by becoming more flexible n adaptable,agile is a set of methods n practices that focuses on iterative development
adopting while changing env ,agile is good for org for their sustainace n growth
requirments  n solutions are obtained thanks to self organising cross functional teams collab

agile vs waterfall-
agile is a continous iteration life cycle model for developing n testing a software with flexibility,collabarative,process is short period by dividing into sprints,changes may be made even after initial planning,softaware development is collection of many different projects,testing is done in same iteration
waterfall- is linear sequential life cycle model for developing n testing a software with rigidity in adopting,least collabarative,process broken into several phases,changes cant be made once development begins,SD is single one,testing comes after the build phases

parts of the ajile -
customer satisfaction,changing needs adressing,deliver frequently of products,work together with collab of developer n business individuals,motivated teams,face to face convo,working softaware,constant pace with sustainace development,good design,simplicity,self organized,reflect n adjust for effectiveness,

increamental development-process divided into small workable increaent,folows previous increamnets
ajile follows repeated cycles which helps in project evolvement over time
ajile is iterative + increamental

Types of agile methodologies-
extreme programming-it is framework that enables teams to create a high quality soft n improves thier quality of life
Kanban-method used to design,manage n improve the flow of systems .orgs can visualize n monitor their flow of work n limit thier work
Lean -is set of tools n principles to remove waste to increase the speed of development,it focuses on maximazing value to client 
Scrum- it is an implementation of the agile methodology
crystal- focuses on people n their interactions rather than tools n processes
Agile metrics-velocity,code quality,code covered.

popular agile tools- github,jira,Trello,Zoho

Jira- is a popular planning,tracking n managing tool used for software developments
jira is known for bug tracking n agile project management
why jira- it is all in one solution for multiple software n team related use cases,it helps create backlog,create sprint,create task,update status,managing release,code integration,managing workflow.

EPIC- is an abstract view of what exactly we need ---story
functonality- planing-->implementation-->testing-->review
steps;
Atlassian.net 
give site name-->select type of prject-->role--->inivite teams--create project--add epic


Test Env types-
Software development life cycle(SDLC) = requirments->analyse->design->coding->test->product deployment
static testing- wether requirments are feasible by review
test env
dev env- unit testing
integrated env- SIT(system integration testing) testing, User Acceptance testing,SVP(performance) testing

levels of Logs-info,debug,warning,error 
SOLID principle-
S- single responsibility  -one method used at multilevels 
O- open close - code should be open for extension n close for modification (should be done by creating other class)
L- list scores
I- interface segregation
D- DI

Balanced Paranthesis- set of paranthesis which contain equal opening n closing paranthesis ,each closing paranthesis is recent one

void should always before the method name .we can change public static
we can overload main method
we can use only Object methods in FI like String toString();
anonymus inner class-creating a class without a name
Sequential stream run on one core n one thread ,output is predictable n 
parallel streams runs on multiple core n multiple threads ,output is not predictable
Recursion-when a method is called on itself

Junit-is a type of software where one individual set of code tested by itselft,unit test isolates one single peice of code(Clss) n varifies that piece working correctlt
add a dependency--use @Test n use assertion methods
TDD-test driver development
Mockito is a Java-based framework used for unit testing of Java applications. 

